name: Run unit tests

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ master ]

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      DBDRIVER: ${{ vars.DBDRIVER }}
      DBUSER: ${{ vars.DBUSER }}
      DBPASSWORD: ${{ vars.DBPASSWORD }}
      DBHOST: ${{ vars.DBHOST }}
      DBPORT: ${{ vars.DBPORT }}
      DBNAME: ${{ vars.DBNAME }}
      DBURL: ${{ vars.DBURL }}

    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: ${{ vars.DBUSER }}}
          POSTGRES_PASSWORD: ${{ vars.DBPASSWORD }}
          POSTGRES_DB: ${{ vars.DBNAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v4
      with:
        go-version: ^1.21
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Install golang-migrate
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate.linux-amd64 /usr/bin/migrate
        migrate -version

    - name: Run migrations
      run: make migrateup

    - name: Run Test
      run: make test
